@using System.Web.Optimization
@using Visibility_Portal
@using Utilities.PortalApplicationParams
@{
  ViewBag.Title = "MSACCO WHITELISTING";

  Layout = $"{MSaccoAreaRegistration.AreaPathFromRoot}/Views/Shared/_LayoutMSacco.cshtml";
  ActiveUserParams activeUserParams = ViewBag.ActiveUserParams;
}
@section HtmlHead {
  @{

    string[] cssFiles = {
$"~/plugins/Responsive-Tabs/css/responsive-tabs.css", // for tab-accordion switching
$"~/plugins/Responsive-Tabs/css/style.css" //basic tab accordion theme
};
  }
  @Styles.Render(cssFiles)
}
<h2>@ViewBag.Title</h2>

@{
  var singleTabId = "Individual";
  var batchTabId = "Batch";
}
<div class="row">
  <div class="col-lg-12 col-md-12 col-sm-12">
    <div id="tabs_whitelistingMode">
      <ul>
        <li><a href="#@singleTabId">Single Member</a></li>
        <li><a href="#@batchTabId">Batch File</a></li>
      </ul>

      <div id="@singleTabId">
        @{
          Html.RenderPartial("_SingleMemberWhitelistingPartial");
        }
      </div>
      <div id="@batchTabId">
        @{
          Html.RenderPartial("_BatchFileWhitelistingPartial");
        }
      </div>

    </div>
  </div>
</div>

@section Scripts {
  <!-- Include external scripts-->
  @{
    string[] scriptFiles = {
$"{MSaccoAreaRegistration.AreaPathFromRoot}/plugins/Responsive-Tabs/js/jquery.responsiveTabs.js",
$"{MSaccoAreaRegistration.AreaPathFromRoot}/plugins/sheetjs/shim.min.js",
$"{MSaccoAreaRegistration.AreaPathFromRoot}/plugins/sheetjs/xlsx.full.min.js",
$"{MSaccoAreaRegistration.AreaPathFromRoot}/Scripts/portal/view/msaccoWhitelisting.js"
};
  }
  @Scripts.Render(scriptFiles)
  <!-- Define local scripts-->
  <script>
    @functions{
        public string XToken()
        {
            string cookieToken, formToken;
            AntiForgery.GetTokens(null, out cookieToken, out formToken);
            return cookieToken + ":" + formToken;                
        }
    }

    $(document).ready(function () {
      @* $('[data-mask]').inputmask();*@
      var applicationTitle = "@ViewBag.Title";
      var token = "@XToken()";

      initResponsiveTabs("#tabs_whitelistingMode");

      $("#memberTelNo").intlTelInput({
         geoIpLookup: function(callback) {
           $.get("http://ipinfo.io", function() {}, "jsonp").always(function(resp) {
             var countryCode = (resp && resp.country) ? resp.country : "ke";
             callback(countryCode);
           });
         },
         initialCountry: "ke",
         separateDialCode: true,
        //utilsScript: "build/js/utils.js"
      });


      initTabulator(
        { tlrName: tlrSingle, tblID: "#memberRecordsListTable" },
        { encSecret: "@activeUserParams.APIAuthID", encKey: "@activeUserParams.APIToken" });

      initTabulator(
        {
          tlrName: tlrBatch,
          tblID: "#batchFileRecordsListTable",
          restUrl: "@Url.Action("WhitelistMemberRecord", "MSACCOWhitelisting")",
          client: @activeUserParams.ClientCorporateNo
        },
        { encSecret: "@activeUserParams.APIAuthID", encKey: "@activeUserParams.APIToken", xToken: token });

      var searchMember = function(phoneNumber){
        SearchMemberRecord(
          "@Url.Action("GetMemberRecord", "MSACCOWhitelisting")",
          @activeUserParams.ClientCorporateNo,
          phoneNumber
        );
      };

      $("#memberTelNo").on("countrychange", function (e, countryData) {
        this.value = "";
      });

      $("#btnSearchMemberRecord").on('click', function () {
        try {
          if (!IsITINumberValid("memberTelNo", applicationTitle, searchMember)) return;
        }
        catch (error) {
          bootbox.alert({
            title: "<h3>" + applicationTitle + " - Phone Number Error</h3>",
            message: "Fatal error. Contact CoreTec support immediately"
          });
          console.log(
            applicationTitle + ": Error on btnSearchMemberRecord: " + error.message + "-" + moment().format(PORTAL_DATE_FORMAT));
          return;
        }
      });

      $("#btnWhitelist").on('click', function () {
        try {
          if (!IsITINumberValid("memberTelNo", applicationTitle)) return;
        }
        catch (error) {
          bootbox.alert({
            title: "<h4>" + applicationTitle + " - Phone Number Error</h4>",
            message: "Fatal error. Contact CoreTec support immediately"
          });
          console.log(
            applicationTitle + ": Error on btnWhitelist: " + error.message + "-" + moment().format(PORTAL_DATE_FORMAT));
          return;
        }

        bootbox.confirm({
          title: "Confirm to whitelist Member",
          message: "Are you sure you want to whitelist this phone number?",
          buttons: {
            cancel: {
              label: '<i class="fa fa-times"></i> Cancel',
              className: 'btn-success'
            },
            confirm: {
              label: '<i class="fa fa-check"></i> Confirm',
              className: 'btn-danger'
            }
          },
          callback: function (result) {
            if (result == true) {
              bootbox.prompt({
                title: "Please provide KYC details ",
                buttons: {
                  cancel: {
                    label: '<i class="fa fa-times"></i> ABORT',
                    className: 'btn-outline-warning'
                  },
                  confirm: {
                    label: '<i class="fa fa-check"></i> PROCEED',
                    className: 'btn-outline-success'
                  }
                },
                inputType: 'textarea',
                centerVertical: true,
                callback: function (result) {
                  if (result != undefined) {
                    if (result.length < 5) {
                      bootbox.alert({
                        title: "<h3>MSACCO Whitelisting</h3>",
                        message: "KYC info is too short! Please provide substantive information"
                      });
                      return;
                    }
                    WhitelistMember(
                      "@Url.Action("WhitelistMemberRecord", "MSACCOWhitelisting")",
                      {
                        client: "@activeUserParams.ClientCorporateNo",
                        phoneNo: $("#memberTelNo").intlTelInput("getNumber"),
                        trustReason: result,
                        processingMode: tlrSingle
                      },
                      {
                        encSecret: "@activeUserParams.APIAuthID",
                        encKey: "@activeUserParams.APIToken",
                        xToken: token
                      }
                    );
                  }
                }
              });


            }
          }

        });
      });

      $("#membersFile").on('change', function (event) {
        selectedMembersBatchFile = event.target.files[0];
      });

      $("#btnImportFromFile").on('click', function () {
        if (selectedMembersBatchFile) {
          var fileReader = new FileReader();

          fileReader.onload = ImportMemberRecordFromFile;
          fileReader.readAsBinaryString(selectedMembersBatchFile);
        }
      });

    });
  </script>
}
